#! /usr/env bash

# swap ctrl and caps on linux
function swapctrl() {
    gsettings set org.gnome.desktop.input-sources xkb-options "['ctrl:swapcaps']"
    echo "swapped ctrl with caps"
}

# mk and cd
function mknd() {
    mkdir $1
    cd $_
}

# cd and launch tmux
function stmux() {
    cd $1
    tmux
}

# delete old kernel headers
function headers() {
    dpkg -l 'linux-*' | sed '/^i i/!d;/'"$(uname -r |
    sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d' |
    xargs sudo apt-get -y purge
    echo "Purged!"
}

# open an Ebook in a new running tmux session
function openbook() {
    echo 'opening book' $1;
    cd ~/Documents/Ebooks;
    xdg-open $1;
}

# launch a project folder in ~/Development
function project() {
    cd ~/Development/$1
    vim
}

# launch chrome from OSX terminal
function chrome() {
    _OS="$(uname)"
    if [ $_OS="Darwin" ]; then
        open -a "/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome"
    fi
}

# Turn touchpad on/off so fat hands dont always move the mouse
function xtoggletouchpad() {
    TOUCH_DEVICE=$(xinput --list --short | grep Touchpad |
        cut -f2 | sed -e 's/^.*id=//')
    ENABLED=$(xinput list-props "$TOUCH_DEVICE" |
        awk '/^\tDevice Enabled \([0-9]+\):\t[01]/ {print $NF}')

    printf "Device targeted: %s\n" "$TOUCH_DEVICE"

    if [ "$ENABLED" -eq "0" ]; then
        xinput enable "$TOUCH_DEVICE"
        printf "Touchpad enabled\n"
    elif [ "$ENABLED" -eq "1" ]; then
        xinput disable '$TOUCH_DEVICE'
        printf "Touchpad disabled\n"
    else
        printf "Error toggling touchpad"
        exit $?
    fi
}
# the awk command from here:
# http://unix.stackexchange.com/questions/258456/using-xinput-to-get-device-state
